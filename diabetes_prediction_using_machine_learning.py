# -*- coding: utf-8 -*-
"""Diabetes Prediction using machine learning.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oh-6GZC4XatSiD5AKSypB-OJMr_Btt-g
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

data = pd.read_csv('/content/diabetes.csv')

print(data.head())

"""IN Outcome where 1 represents that the patient is diabetic viceversa"""

#numbers of rows and columns

data.shape

data.info()

data.describe()

data['Outcome'].value_counts()

data.groupby('Outcome').mean()

#seperating the columns to x and y for train/test split
x = data.drop(columns = 'Outcome' , axis = 1)
y = data['Outcome']

print(x)

print(y)

ss = StandardScaler()
ssx = ss.fit_transform(x)

x = ssx

print(x)

print(y)

x_train , x_test , y_train , y_test = train_test_split(x ,y ,test_size = 0.2 , random_state= 2 , stratify = y)

print(x.shape , x_train.shape , x_test.shape)

#Training the Model
classifier = svm.SVC(kernel='linear')

#training the support vector machine Classifier
classifier.fit(x_train , y_train)

#Prediction
predict_x_train = classifier.predict(x_train)

# Model Evalution
Accuracy1 = accuracy_score(predict_x_train , y_train)

print(f'Accuracy of the train data : {Accuracy1}')

#Prediction
predict_x_test = classifier.predict(x_test)

# Model Evalution
Accuracy2 = accuracy_score(predict_x_test , y_test)

print(f'Accuracy of the test data : {Accuracy2}')

# Making a Predictive system
input_data = (5,166,72,19,175,25.8,0.587,51
)

#changing the input data to numpy array
input_array = np.asarray(input_data)

#reshape the array as we are predicting for an instances
input_array_reshaped = input_array.reshape(1,-1)

#standardize it before applying in our predictive system
standardize_input_data = ss.fit_transform(input_array_reshaped)
print(standardize_input_data)

pred = classifier.predict(standardize_input_data)
print(pred)

if(pred[0] == 0):
  print('The person is not diabetic')
else:
  print('The person is diabetic')

